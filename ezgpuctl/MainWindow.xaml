<Window x:Class="GPUControl.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GPUControl"
        xmlns:mpane="clr-namespace:GPUControl.MainPanes"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel, IsDesignTimeCreatable=True}"
        Title="GPU Control" Height="450" Width="800"
        Icon="/Resources/gpu.ico"
        StateChanged="Window_StateChanged">
    <Window.Resources>
        <ContextMenu x:Key="TrayContextMenu">
            <MenuItem Header="Settings">
                <MenuItem Header="Minimize On Start" IsChecked="{Binding StartMinimized}" Command="{Binding ToggleStartMinimized}" />
                <MenuItem Header="Start With Windows" IsChecked="{Binding RunOnStartup.IsEnabled}" Command="{Binding ToggleRunOnStartup}" />
                <MenuItem Header="Ask Before Close" IsChecked="{Binding AskBeforeClose}" Command="{Binding ToggleAskBeforeClose}" />
            </MenuItem>
            
            <MenuItem Header="About" Command="{Binding ShowAboutWindow}" />

            <Separator />

            <MenuItem Header="OC Mode" IsEnabled="False" FontWeight="Bold" />
            <MenuItem Header="Stock" IsCheckable="False" IsChecked="{Binding PolicyService.IsOcModeStock, Mode=OneWay}" Command="{Binding PolicyService.SetOcModeStock}" />
            <MenuItem Header="Policies" IsCheckable="False" IsChecked="{Binding PolicyService.IsOcModePolicies, Mode=OneWay}" Command="{Binding PolicyService.SetOcModePolicies}" />

            <MenuItem Header="Specific Policy" IsCheckable="False" IsChecked="{Binding PolicyService.IsOcModeSpecificPolicy, Mode=OneWay}" ItemsSource="{Binding PolicyService.PolicyApplications}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="IsChecked" Value="{Binding IsInUse}" />
                        <Setter Property="Command" Value="{Binding Select}" />
                        <Setter Property="CommandParameter" Value="{Binding Name}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <MenuItem Header="Specific Profile" IsCheckable="False" IsChecked="{Binding PolicyService.IsOcModeSpecificProfile, Mode=OneWay}" ItemsSource="{Binding PolicyService.ProfileApplications}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="IsChecked" Value="{Binding IsInUse}" />
                        <Setter Property="Command" Value="{Binding Select}" />
                        <Setter Property="CommandParameter" Value="{Binding Name}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <Separator />

            <MenuItem Header="Open" Click="MenuItem_Open_Click" />
            <MenuItem Header="Pause" Command="{Binding PolicyService.StopOcService}" />
            <MenuItem Header="Resume" Command="{Binding PolicyService.StartOcService}" />

            <Separator />

            <MenuItem Header="Exit" Command="{Binding Exit}" />
        </ContextMenu>
    </Window.Resources>
    <Grid>
        <tb:TaskbarIcon
            x:Name="NotifyIcon"
            IconSource="/Resources/gpu.ico"
            MenuActivation="RightClick"
            ContextMenu="{StaticResource TrayContextMenu}"
            TrayMouseDoubleClick="NotifyIcon_TrayMouseDoubleClick"
            />
        <xcad:DockingManager x:Name="DockManager">
            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Vertical">
                    <xcad:LayoutPanel Orientation="Horizontal">
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Policies" CanClose="False" CanHide="False" ContentId="PoliciesPane">
                                <mpane:PoliciesPane x:Name="PoliciesPane" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" />
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Profiles" CanClose="False" CanHide="False" ContentId="ProfilesPane">
                                <mpane:ProfilesPane x:Name="ProfilesPane" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" />
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutPanel>
                    <xcad:LayoutPanel Orientation="Horizontal">
                        <!--<xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Settings" CanClose="False" CanHide="False" ContentId="OcStatusPane">
                                <mpane:SettingsPane x:Name="SettingsPane" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" />
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>-->
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="GPU Status" CanClose="False" CanHide="False" ContentId="GpuStatusPane">
                                <mpane:GpuStatusPane DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" />
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutPanel>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </xcad:DockingManager>
    </Grid>
</Window>
