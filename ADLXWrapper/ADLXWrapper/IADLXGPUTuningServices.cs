//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace ADLXWrapper {

public class IADLXGPUTuningServices : IADLXInterface {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal IADLXGPUTuningServices(global::System.IntPtr cPtr, bool cMemoryOwn) : base(ADLXPINVOKE.IADLXGPUTuningServices_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IADLXGPUTuningServices obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ADLXPINVOKE.delete_IADLXGPUTuningServices(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public new static SWIGTYPE_p_wchar_t IID() {
    global::System.IntPtr cPtr = ADLXPINVOKE.IADLXGPUTuningServices_IID();
    SWIGTYPE_p_wchar_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
    return ret;
  }

  public virtual ADLX_RESULT GetGPUTuningChangedHandling(SWIGTYPE_p_p_adlx__IADLXGPUTuningChangedHandling ppGPUTuningChangedHandling) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_GetGPUTuningChangedHandling(swigCPtr, SWIGTYPE_p_p_adlx__IADLXGPUTuningChangedHandling.getCPtr(ppGPUTuningChangedHandling));
    return ret;
  }

  public virtual ADLX_RESULT IsAtFactory(IADLXGPU pGPU, SWIGTYPE_p_bool isFactory) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_IsAtFactory(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_bool.getCPtr(isFactory));
    return ret;
  }

  public virtual ADLX_RESULT ResetToFactory(IADLXGPU pGPU) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_ResetToFactory(swigCPtr, IADLXGPU.getCPtr(pGPU));
    return ret;
  }

  public virtual ADLX_RESULT IsSupportedAutoTuning(IADLXGPU pGPU, SWIGTYPE_p_bool supported) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_IsSupportedAutoTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_bool.getCPtr(supported));
    return ret;
  }

  public virtual ADLX_RESULT IsSupportedPresetTuning(IADLXGPU pGPU, SWIGTYPE_p_bool supported) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_IsSupportedPresetTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_bool.getCPtr(supported));
    return ret;
  }

  public virtual ADLX_RESULT IsSupportedManualGFXTuning(IADLXGPU pGPU, SWIGTYPE_p_bool supported) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_IsSupportedManualGFXTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_bool.getCPtr(supported));
    return ret;
  }

  public virtual ADLX_RESULT IsSupportedManualVRAMTuning(IADLXGPU pGPU, SWIGTYPE_p_bool supported) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_IsSupportedManualVRAMTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_bool.getCPtr(supported));
    return ret;
  }

  public virtual ADLX_RESULT IsSupportedManualFanTuning(IADLXGPU pGPU, SWIGTYPE_p_bool supported) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_IsSupportedManualFanTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_bool.getCPtr(supported));
    return ret;
  }

  public virtual ADLX_RESULT IsSupportedManualPowerTuning(IADLXGPU pGPU, SWIGTYPE_p_bool supported) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_IsSupportedManualPowerTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_bool.getCPtr(supported));
    return ret;
  }

  public virtual ADLX_RESULT GetAutoTuning(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLXInterface ppAutoTuning) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_GetAutoTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLXInterface.getCPtr(ppAutoTuning));
    return ret;
  }

  public virtual ADLX_RESULT GetPresetTuning(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLXInterface ppPresetTuning) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_GetPresetTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLXInterface.getCPtr(ppPresetTuning));
    return ret;
  }

  public virtual ADLX_RESULT GetManualGFXTuning(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLXInterface ppManualGFXTuning) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_GetManualGFXTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLXInterface.getCPtr(ppManualGFXTuning));
    return ret;
  }

  public virtual ADLX_RESULT GetManualVRAMTuning(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLXInterface ppManualVRAMTuning) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_GetManualVRAMTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLXInterface.getCPtr(ppManualVRAMTuning));
    return ret;
  }

  public virtual ADLX_RESULT GetManualFanTuning(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLXInterface ppManualFanTuning) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_GetManualFanTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLXInterface.getCPtr(ppManualFanTuning));
    return ret;
  }

  public virtual ADLX_RESULT GetManualPowerTuning(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLXInterface ppManualPowerTuning) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXGPUTuningServices_GetManualPowerTuning(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLXInterface.getCPtr(ppManualPowerTuning));
    return ret;
  }

}

}
