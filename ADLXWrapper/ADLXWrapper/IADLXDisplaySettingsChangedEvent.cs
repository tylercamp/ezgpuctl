//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace ADLXWrapper {

public class IADLXDisplaySettingsChangedEvent : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IADLXDisplaySettingsChangedEvent(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IADLXDisplaySettingsChangedEvent obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IADLXDisplaySettingsChangedEvent() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ADLXPINVOKE.delete_IADLXDisplaySettingsChangedEvent(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public static SWIGTYPE_p_wchar_t IID() {
    global::System.IntPtr cPtr = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IID();
    SWIGTYPE_p_wchar_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
    return ret;
  }

  public virtual ADLX_RESULT GetDisplay(SWIGTYPE_p_p_adlx__IADLXDisplay ppDisplay) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_GetDisplay(swigCPtr, SWIGTYPE_p_p_adlx__IADLXDisplay.getCPtr(ppDisplay));
    return ret;
  }

  public virtual bool IsFreeSyncChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsFreeSyncChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsVSRChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsVSRChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsGPUScalingChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsGPUScalingChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsScalingModeChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsScalingModeChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsIntegerScalingChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsIntegerScalingChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsColorDepthChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsColorDepthChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsPixelFormatChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsPixelFormatChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsHDCPChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsHDCPChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsCustomColorHueChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsCustomColorHueChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsCustomColorSaturationChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsCustomColorSaturationChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsCustomColorBrightnessChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsCustomColorBrightnessChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsCustomColorTemperatureChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsCustomColorTemperatureChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsCustomColorContrastChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsCustomColorContrastChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsCustomResolutionChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsCustomResolutionChanged(swigCPtr);
    return ret;
  }

  public virtual bool IsVariBrightChanged() {
    bool ret = ADLXPINVOKE.IADLXDisplaySettingsChangedEvent_IsVariBrightChanged(swigCPtr);
    return ret;
  }

}

}
